------------------------------
--Lab04-Carry Select Adder
------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
 
Entity carry_select_adder is
Port (
	A : in std_logic_vector (3 downto 0);
	B : in std_logic_vector (3 downto 0);
	Cin : in std_logic;
	S : out std_logic_vector (3 downto 0);
	Cout : out std_logic);
end carry_select_adder;
 Architecture Behavioral of carry_select_adder is
 
--COMPONENT OF FULL ADDER
component full_adder
Port (
	A : IN STD_LOGIC;
	B : IN STD_LOGIC;
	Cin : IN STD_LOGIC;
	S : OUT STD_LOGIC;
	Cout : OUT STD_LOGIC);
end component;
 

component mux2X1
Port(
	A : IN STD_LOGIC;
	B : IN STD_LOGIC;
	Sel: IN STD_LOGIC;
	O: OUT STD_LOGIC
);
end component;
 
signal Sum0,Sum1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
signal c0,c1: STD_LOGIC_VECTOR(3 DOWNTO 0);
begin
 
fa1: full_adder PORT MAP(A(0),B(0),'0' ,Sum0(0),c0(0));
fa2: full_adder PORT MAP(A(1),B(1),c0(0),Sum0(1),c0(1));
fa3: full_adder PORT MAP(A(2),B(2),c0(1),Sum0(2),c0(2));
fa4: full_adder PORT MAP(A(3),B(3),c0(2),Sum0(3),c0(3));
 
fa5: full_adder PORT MAP(A(0),B(0),'1' ,Sum1(0),c1(0));
fa6: full_adder PORT MAP(A(1),B(1),c1(0),Sum1(1),c1(1));
fa7: full_adder PORT MAP(A(2),B(2),c1(1),Sum1(2),c1(2));
fa8: full_adder PORT MAP(A(3),B(3),c1(2),Sum1(3),c1(3));
 
MUX1: mux2X1 PORT MAP(Sum0(0),Sum1(0),Cin,S(0));
MUX2: mux2X1 PORT MAP(Sum0(1),Sum1(1),Cin,S(1));
MUX3: mux2X1 PORT MAP(Sum0(2),Sum1(2),Cin,S(2));
MUX4: mux2X1 PORT MAP(Sum0(3),Sum1(3),Cin,S(3));
 
MUX5: mux2X1 PORT MAP(c0(3),c1(3),Cin,Cout);
 
end Behavioral;
